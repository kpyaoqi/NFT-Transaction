// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameNftUserReal = "nft_user_real"

// NftUserReal mapped from table <nft_user_real>
type NftUserReal struct {
	UserID      string     `gorm:"column:userId;type:varchar(50);primaryKey" json:"userId"`         // 用户标识
	IdentityNum string     `gorm:"column:identityNum;type:varchar(18);not null" json:"identityNum"` // 身份证号
	Name        string     `gorm:"column:name;type:varchar(10);not null" json:"name"`               // 姓名
	Moble       string     `gorm:"column:moble;type:varchar(11);not null" json:"moble"`             // 手机号
	Address     string     `gorm:"column:address;type:varchar(500);not null" json:"address"`        // 现居住址
	FrontPath   string     `gorm:"column:frontPath;type:varchar(200);not null" json:"frontPath"`    // 身份证正面图片
	BackPath    string     `gorm:"column:backPath;type:varchar(200);not null" json:"backPath"`      // 身份证反面图片
	CreateTime  time.Time  `gorm:"column:createTime;type:datetime;not null" json:"createTime"`
	UpdateTime  *time.Time `gorm:"column:updateTime;type:datetime" json:"updateTime"`
	Bak1        *string    `gorm:"column:bak1;type:varchar(255)" json:"bak1"`
	Bak2        *string    `gorm:"column:bak2;type:varchar(255)" json:"bak2"`
	Bak3        *string    `gorm:"column:bak3;type:varchar(255)" json:"bak3"`
}

// TableName NftUserReal's table name
func (*NftUserReal) TableName() string {
	return TableNameNftUserReal
}

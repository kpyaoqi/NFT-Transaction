// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameTOrg = "t_org"

// TOrg mapped from table <t_org>
type TOrg struct {
	ID           string    `gorm:"column:id;type:varchar(50);primaryKey" json:"id"`           // 编号
	Name         string    `gorm:"column:name;type:varchar(60);not null" json:"name"`         // 名称
	Comcode      string    `gorm:"column:comcode;type:varchar(1000);not null" json:"comcode"` // 代码
	Pid          string    `gorm:"column:pid;type:varchar(50);not null" json:"pid"`           // 上级部门ID
	OrgType      int64     `gorm:"column:orgType;type:int;not null" json:"orgType"`           // 0-99门店,100-199部门,200-299,分公司,300-399集团公司,900-999总平台
	Sortno       int64     `gorm:"column:sortno;type:int;not null" json:"sortno"`             // 排序,查询时倒叙排列
	Remark       *string   `gorm:"column:remark;type:varchar(2000)" json:"remark"`            // 备注
	CreateTime   time.Time `gorm:"column:createTime;type:datetime;not null;default:CURRENT_TIMESTAMP" json:"createTime"`
	CreateUserID *string   `gorm:"column:createUserId;type:varchar(50)" json:"createUserId"`
	UpdateTime   time.Time `gorm:"column:updateTime;type:datetime;not null;default:CURRENT_TIMESTAMP" json:"updateTime"`
	UpdateUserID *string   `gorm:"column:updateUserId;type:varchar(50)" json:"updateUserId"`
	Active       int64     `gorm:"column:active;type:int;not null;default:1" json:"active"` // 是否有效(0否,1是)
	Bak1         *string   `gorm:"column:bak1;type:varchar(100)" json:"bak1"`
	Bak2         *string   `gorm:"column:bak2;type:varchar(100)" json:"bak2"`
	Bak3         *string   `gorm:"column:bak3;type:varchar(100)" json:"bak3"`
	Bak4         *string   `gorm:"column:bak4;type:varchar(100)" json:"bak4"`
	Bak5         *string   `gorm:"column:bak5;type:varchar(100)" json:"bak5"`
}

// TableName TOrg's table name
func (*TOrg) TableName() string {
	return TableNameTOrg
}
